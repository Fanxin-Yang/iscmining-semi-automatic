import{a as g}from"./index.becf6c0c.js";import{_ as v,o as i,c as a,a as t,w as m,v as b,F as p,r as f,t as h,b as _,f as k,d as y,e as q}from"./index.8bd797c2.js";const S={data(){return{selectedCT:void 0,classificationTechniques:void 0,selectedLabel:void 0,selectedSamples:[],msg:void 0,status:void 0,selectedEncoder:"0"}},props:["labels"],emits:["technique"],methods:{get_classification_techniques(){const o="http://localhost:5000/discovery";g.get(o).then(s=>{this.classificationTechniques=s.data}).catch(s=>{console.error(s)})},change(){this.status=0,this.$emit("technique",this.selectedCT,this.selectedLabel,this.selectedSamples,this.selectedEncoder)}},created(){this.get_classification_techniques()}},L=t("h3",null,"Choose a Classificaton Technique.",-1),T={class:"row"},x={class:"mb-3"},w=t("option",{selected:"",disabled:"",value:""}," Choose a Classificaton Technique ",-1),E={id:"techniqueHelp",class:"form-text"},V={key:0,class:"row"},U=t("div",{class:"col-md-9"},[t("a",{target:"_blank",href:"https://scikit-learn.org/stable/modules/tree.html"},"Decision Trees (DTs)"),k(" are a non-parametric supervised learning method used for classification and regression. The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features. A tree can be seen as a piecewise constant approximation. ")],-1),O=[U],H={key:1,class:"row"},D={class:"col-5"},j=t("label",{for:"label",class:"form-label"},"The target values (class labels)",-1),A=t("div",{id:"labelHelp",class:"form-text"}," y: array-like of shape (n_samples,) or (n_samples, n_outputs) ",-1),B={class:"col-5"},N=t("label",{for:"training",class:"form-label"},"The training input samples",-1),F=["disabled"],K=["disabled"],P=t("div",{id:"trainingHelp",class:"form-text"}," X: {array-like, sparse matrix} of shape (n_samples, n_features) ",-1),R={class:"col-2"},z=t("label",{for:"encoder",class:"form-label"},"Encoder",-1),M=["disabled"],X=t("option",{value:"0"},"Ordinal Encoder",-1),G=t("option",{value:"1"},"One-Hot Encoder",-1),I=[X,G],J={key:0,id:"encoderHelp",class:"form-text"},Q=t("a",{target:"_blank",href:"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OrdinalEncoder.html#sklearn.preprocessing.OrdinalEncoder"},"Ordinal Encoder",-1),W=k(" is suitable for categorical variables with ordinal relationship. "),Y=[Q,W],Z={key:1,id:"encoderHelp",class:"form-text"},$=t("a",{target:"_blank",href:"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html?highlight=encoder#sklearn.preprocessing.OneHotEncoder"},"One-Hot Encoder",-1),ee=k(" is suitable for categorical variables without ordinal relationship. "),se=[$,ee];function te(o,s,n,d,e,r){return i(),a(p,null,[L,t("div",T,[t("div",x,[m(t("select",{"onUpdate:modelValue":s[0]||(s[0]=l=>e.selectedCT=l),class:"form-select",id:"technique","aria-label":"techniqueHelp",onChange:s[1]||(s[1]=(...l)=>r.change&&r.change(...l))},[w,(i(!0),a(p,null,f(e.classificationTechniques,(l,c)=>(i(),a("option",{key:c},h(l),1))),128))],544),[[b,e.selectedCT]]),t("div",E," Selected classification technique: "+h(e.selectedCT),1)])]),e.selectedCT=="Decision Tree"?(i(),a("div",V,O)):_("",!0),e.selectedCT?(i(),a("div",H,[t("div",D,[j,m(t("select",{"onUpdate:modelValue":s[2]||(s[2]=l=>e.selectedLabel=l),class:"form-select",id:"label","aria-label":"labelHelp",onChange:s[3]||(s[3]=(...l)=>r.change&&r.change(...l))},[(i(!0),a(p,null,f(n.labels,(l,c)=>(i(),a("option",{key:c},h(l),1))),128))],544),[[b,e.selectedLabel]]),A]),t("div",B,[N,m(t("select",{"onUpdate:modelValue":s[4]||(s[4]=l=>e.selectedSamples=l),class:"form-select",id:"training",multiple:"","aria-label":"trainingHelp",disabled:!e.selectedLabel,onChange:s[5]||(s[5]=(...l)=>r.change&&r.change(...l))},[(i(!0),a(p,null,f(n.labels,(l,c)=>(i(),a("option",{key:c,disabled:l==e.selectedLabel},h(l),9,K))),128))],40,F),[[b,e.selectedSamples]]),P]),t("div",R,[z,m(t("select",{"onUpdate:modelValue":s[6]||(s[6]=l=>e.selectedEncoder=l),class:"form-select",id:"encoder","aria-label":"encoderHelp",disabled:e.selectedSamples.length==0,onChange:s[7]||(s[7]=(...l)=>r.change&&r.change(...l))},I,40,M),[[b,e.selectedEncoder]]),e.selectedEncoder=="0"?(i(),a("div",J,Y)):e.selectedEncoder=="1"?(i(),a("div",Z,se)):_("",!0)])])):_("",!0)],64)}var le=v(S,[["render",te]]);const ie={data(){return{labelsUnique:{},selectedLabels:{},tmp:[]}},props:["labels"],emits:["filter"],methods:{get_unique(){let o="http://localhost:5000/discovery/"+this.$route.params.dataSet+"/"+this.$route.params.csv;this.$route.params.level!="Seconds"&&(o=o+"_"+this.$route.params.level);for(let s=0;s<this.labels.length;s++){const n=new URLSearchParams([["label",this.labels[s]]]);g.get(o,{params:n}).then(d=>{this.labelsUnique[this.labels[s]]=Object.values(d.data),this.selectedLabels[this.labels[s]]=[],this.update_filter()}).catch(d=>{console.error(d)})}},update_filter(){this.$emit("filter",this.selectedLabels)},selectAll(o){this.selectedLabels[o]=this.labelsUnique[o]}},created(){this.get_unique()}},ae=t("h3",null,"Value Selection",-1),ne=t("h6",null," Please select at least 1 value of each attributes. (Default: all selected.) ",-1),oe={class:"row"},ce={class:"form-check"},re=["id","checked","onChange"],de=["for"],he=["onUpdate:modelValue"];function ue(o,s,n,d,e,r){return i(),a(p,null,[ae,ne,t("div",oe,[(i(!0),a(p,null,f(e.labelsUnique,(l,c)=>(i(),a("div",{class:"col-auto",key:c},[t("div",ce,[t("input",{class:"form-check-input",id:"checkBox_"+c,type:"checkbox",value:"",checked:e.selectedLabels[c].length==0||e.selectedLabels[c].length==e.labelsUnique[c].length,onChange:u=>r.selectAll(c)},null,40,re),t("label",{class:"form-check-label",for:"checkBox_"+c},h(c),9,de)]),t("div",null," selected length: "+h(e.selectedLabels[c].length)+" labelsUnique length: "+h(e.labelsUnique[c].length),1),m(t("select",{size:"10","onUpdate:modelValue":u=>e.selectedLabels[c]=u,class:"form-select",multiple:"",id:"select",onChange:s[0]||(s[0]=(...u)=>r.update_filter&&r.update_filter(...u))},[(i(!0),a(p,null,f(l,(u,C)=>(i(),a("option",{key:C},h(u),1))),128))],40,he),[[b,e.selectedLabels[c]]])]))),128))])],64)}var pe=v(ie,[["render",ue]]);const _e={components:{ClassificationTechniques:le,ValueSelection:pe},data(){return{events:{},labels:[],filter:{},technique:void 0,classLabel:void 0,inputSamples:void 0,encoder:"0",applied:[],status:void 0,msg:void 0,cacheKey:+new Date}},methods:{get_events(){let o="http://localhost:5000/discovery/"+this.$route.params.dataSet+"/"+this.$route.params.csv;this.$route.params.level!="Seconds"&&(o=o+"_"+this.$route.params.level),g.get(o).then(s=>{this.events=s.data,this.labels=Object.keys(this.events[0]).filter(n=>n!="No.")}).catch(s=>{this.status=s.response.status,this.msg=s.response.data})},update_filter(o){this.filter=o},update_technique(o,s,n,d){this.technique=o,this.classLabel=s,this.inputSamples=n,this.encoder=d},apply(){this.applied=[this.technique,this.classLabel,this.inputSamples,this.filter,this.encoder],this.cacheKey=+new Date,this.status=1;const o="http://localhost:5000/discovery/"+this.$route.params.dataSet+"/"+this.$route.params.csv+"_"+this.$route.params.level+"/"+this.technique.replace(/\s+/g,"").toLowerCase(),s=new URLSearchParams([["classLabel",this.classLabel],["inputSamples",this.inputSamples],["encoder",this.encoder]]);for(let n=0;n<Object.keys(this.filter).length;n++){const d=Object.keys(this.filter)[n];s.append(d,this.filter[d])}g.get(o,{params:s}).then(n=>{this.status=n.status,this.msg=n.data,console.log(n.data)}).catch(n=>{this.status=n.response.status,this.msg=n.response.data,console.error(n)})}},created(){this.get_events()}},me={class:"row g-5"},be=t("h3",{class:"display-4"},"Classification Algorithm",-1),fe={key:0,class:"col-md-12"},ge={key:1,class:"col-md-12"},ve={class:"d-grid col-4 mx-auto"},ke={key:0,class:"text-center"},ye=t("div",{class:"spinner-border m-8",role:"status"},[t("span",{class:"visually-hidden"},"Loading...")],-1),qe=[ye],Ce=["disabled"],Se={key:2,class:"col-md-12"},Le={class:"alert alert-danger",role:"alert"},Te={key:3,class:"col-md-12"},xe={class:"alert alert-success",role:"alert"},we=["src"];function Ee(o,s,n,d,e,r){const l=y("ValueSelection"),c=y("ClassificationTechniques");return i(),a("form",me,[be,Object.keys(this.events).length>0?(i(),a("div",fe,[q(l,{labels:e.labels,onFilter:r.update_filter},null,8,["labels","onFilter"])])):_("",!0),Object.keys(this.events).length>0?(i(),a("div",ge,[q(c,{labels:e.labels,onTechnique:r.update_technique},null,8,["labels","onTechnique"])])):_("",!0),t("div",ve,[this.status==1?(i(),a("div",ke,qe)):(i(),a("button",{key:1,type:"button",class:"btn btn-primary btn-lg",onClick:s[0]||(s[0]=(...u)=>r.apply&&r.apply(...u)),disabled:!e.inputSamples||e.inputSamples.length==0||e.applied[0]==e.technique&&e.applied[1]==e.classLabel&&e.applied[2]==e.inputSamples&&e.applied[3]==e.filter&&e.applied[4]==e.encoder}," Apply "+h(e.technique)+" Algorithm ",9,Ce))]),this.status==405?(i(),a("div",Se,[t("div",Le,h(e.msg),1)])):this.status==200?(i(),a("div",Te,[t("div",xe,h(e.msg),1),t("img",{src:"http://localhost:5000/decisiontree/"+this.$route.params.dataSet+"/"+this.$route.params.csv+"_"+this.$route.params.level+"?cache="+this.cacheKey,class:"img-fluid"},null,8,we)])):_("",!0)])}var Oe=v(_e,[["render",Ee]]);export{Oe as default};
