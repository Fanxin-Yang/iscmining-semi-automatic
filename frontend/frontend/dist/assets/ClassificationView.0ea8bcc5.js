import{_ as v,b as g,o as a,c as n,a as t,w as m,v as b,F as p,r as f,t as d,d as _,g as k,e as y,f as q}from"./index.1548a765.js";const S={data(){return{selectedCT:void 0,classificationTechniques:void 0,selectedLabel:void 0,selectedSamples:[],msg:void 0,status:void 0,selectedEncoder:"0"}},props:["labels"],emits:["technique"],methods:{get_classification_techniques(){g.get("/discovery").then(i=>{this.classificationTechniques=i.data}).catch(i=>{console.error(i)})},change(){this.status=0,this.$emit("technique",this.selectedCT,this.selectedLabel,this.selectedSamples,this.selectedEncoder)}},created(){this.get_classification_techniques()}},L=t("h3",null,"Choose a Classificaton Technique.",-1),T={class:"row"},x={class:"mb-3"},w=t("option",{selected:"",disabled:"",value:""}," Choose a Classificaton Technique ",-1),E={id:"techniqueHelp",class:"form-text"},V={key:0,class:"row"},U=t("div",{class:"col-md-9"},[t("a",{target:"_blank",href:"https://scikit-learn.org/stable/modules/tree.html"},"Decision Trees (DTs)"),k(" are a non-parametric supervised learning method used for classification and regression. The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features. A tree can be seen as a piecewise constant approximation. ")],-1),O=[U],H={key:1,class:"row"},D={class:"col-5"},j=t("label",{for:"label",class:"form-label"},"The target values (class labels)",-1),A=t("div",{id:"labelHelp",class:"form-text"}," y: array-like of shape (n_samples,) or (n_samples, n_outputs) ",-1),B={class:"col-5"},N=t("label",{for:"training",class:"form-label"},"The training input samples",-1),F=["disabled"],K=["disabled"],P=t("div",{id:"trainingHelp",class:"form-text"}," X: {array-like, sparse matrix} of shape (n_samples, n_features) ",-1),R={class:"col-2"},z=t("label",{for:"encoder",class:"form-label"},"Encoder",-1),M=["disabled"],X=t("option",{value:"0"},"Ordinal Encoder",-1),G=t("option",{value:"1"},"One-Hot Encoder",-1),I=[X,G],J={key:0,id:"encoderHelp",class:"form-text"},Q=t("a",{target:"_blank",href:"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OrdinalEncoder.html#sklearn.preprocessing.OrdinalEncoder"},"Ordinal Encoder",-1),W=k(" is suitable for categorical variables with ordinal relationship. "),Y=[Q,W],Z={key:1,id:"encoderHelp",class:"form-text"},$=t("a",{target:"_blank",href:"https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html?highlight=encoder#sklearn.preprocessing.OneHotEncoder"},"One-Hot Encoder",-1),ee=k(" is suitable for categorical variables without ordinal relationship. "),se=[$,ee];function te(i,e,r,h,s,c){return a(),n(p,null,[L,t("div",T,[t("div",x,[m(t("select",{"onUpdate:modelValue":e[0]||(e[0]=l=>s.selectedCT=l),class:"form-select",id:"technique","aria-label":"techniqueHelp",onChange:e[1]||(e[1]=(...l)=>c.change&&c.change(...l))},[w,(a(!0),n(p,null,f(s.classificationTechniques,(l,o)=>(a(),n("option",{key:o},d(l),1))),128))],544),[[b,s.selectedCT]]),t("div",E," Selected classification technique: "+d(s.selectedCT),1)])]),s.selectedCT=="Decision Tree"?(a(),n("div",V,O)):_("",!0),s.selectedCT?(a(),n("div",H,[t("div",D,[j,m(t("select",{"onUpdate:modelValue":e[2]||(e[2]=l=>s.selectedLabel=l),class:"form-select",id:"label","aria-label":"labelHelp",onChange:e[3]||(e[3]=(...l)=>c.change&&c.change(...l))},[(a(!0),n(p,null,f(r.labels,(l,o)=>(a(),n("option",{key:o},d(l),1))),128))],544),[[b,s.selectedLabel]]),A]),t("div",B,[N,m(t("select",{"onUpdate:modelValue":e[4]||(e[4]=l=>s.selectedSamples=l),class:"form-select",id:"training",multiple:"","aria-label":"trainingHelp",disabled:!s.selectedLabel,onChange:e[5]||(e[5]=(...l)=>c.change&&c.change(...l))},[(a(!0),n(p,null,f(r.labels,(l,o)=>(a(),n("option",{key:o,disabled:l==s.selectedLabel},d(l),9,K))),128))],40,F),[[b,s.selectedSamples]]),P]),t("div",R,[z,m(t("select",{"onUpdate:modelValue":e[6]||(e[6]=l=>s.selectedEncoder=l),class:"form-select",id:"encoder","aria-label":"encoderHelp",disabled:s.selectedSamples.length==0,onChange:e[7]||(e[7]=(...l)=>c.change&&c.change(...l))},I,40,M),[[b,s.selectedEncoder]]),s.selectedEncoder=="0"?(a(),n("div",J,Y)):s.selectedEncoder=="1"?(a(),n("div",Z,se)):_("",!0)])])):_("",!0)],64)}var le=v(S,[["render",te]]);const ie={data(){return{labelsUnique:{},selectedLabels:{},tmp:[]}},props:["labels"],emits:["filter"],methods:{get_unique(){let i="http://localhost:5000/discovery/"+this.$route.params.dataSet+"/"+this.$route.params.csv;this.$route.params.level!="Seconds"&&(i=i+"_"+this.$route.params.level);for(let e=0;e<this.labels.length;e++){const r=new URLSearchParams([["label",this.labels[e]]]);g.get(i,{params:r}).then(h=>{this.labelsUnique[this.labels[e]]=Object.values(h.data),this.selectedLabels[this.labels[e]]=[],this.update_filter()}).catch(h=>{console.error(h)})}},update_filter(){this.$emit("filter",this.selectedLabels)},selectAll(i){this.selectedLabels[i]=this.labelsUnique[i]}},created(){this.get_unique()}},ae=t("h3",null,"Value Selection",-1),ne=t("h6",null," Please select at least 1 value of each attributes. (Default: all selected.) ",-1),oe={class:"row"},ce={class:"form-check"},re=["id","checked","onChange"],de=["for"],he=["onUpdate:modelValue"];function ue(i,e,r,h,s,c){return a(),n(p,null,[ae,ne,t("div",oe,[(a(!0),n(p,null,f(s.labelsUnique,(l,o)=>(a(),n("div",{class:"col-auto",key:o},[t("div",ce,[t("input",{class:"form-check-input",id:"checkBox_"+o,type:"checkbox",value:"",checked:s.selectedLabels[o].length==0||s.selectedLabels[o].length==s.labelsUnique[o].length,onChange:u=>c.selectAll(o)},null,40,re),t("label",{class:"form-check-label",for:"checkBox_"+o},d(o),9,de)]),t("div",null," selected length: "+d(s.selectedLabels[o].length)+" labelsUnique length: "+d(s.labelsUnique[o].length),1),m(t("select",{size:"10","onUpdate:modelValue":u=>s.selectedLabels[o]=u,class:"form-select",multiple:"",id:"select",onChange:e[0]||(e[0]=(...u)=>c.update_filter&&c.update_filter(...u))},[(a(!0),n(p,null,f(l,(u,C)=>(a(),n("option",{key:C},d(u),1))),128))],40,he),[[b,s.selectedLabels[o]]])]))),128))])],64)}var pe=v(ie,[["render",ue]]);const _e={components:{ClassificationTechniques:le,ValueSelection:pe},data(){return{events:{},labels:[],filter:{},technique:void 0,classLabel:void 0,inputSamples:void 0,encoder:"0",applied:[],status:void 0,msg:void 0,cacheKey:+new Date}},methods:{get_events(){let i="http://localhost:5000/discovery/"+this.$route.params.dataSet+"/"+this.$route.params.csv;this.$route.params.level!="Seconds"&&(i=i+"_"+this.$route.params.level),g.get(i).then(e=>{this.events=e.data,this.labels=Object.keys(this.events[0]).filter(r=>r!="No.")}).catch(e=>{this.status=e.response.status,this.msg=e.response.data})},update_filter(i){this.filter=i},update_technique(i,e,r,h){this.technique=i,this.classLabel=e,this.inputSamples=r,this.encoder=h},apply(){this.applied=[this.technique,this.classLabel,this.inputSamples,this.filter,this.encoder],this.cacheKey=+new Date,this.status=1;const i=new URLSearchParams([["classLabel",this.classLabel],["inputSamples",this.inputSamples],["encoder",this.encoder]]);for(let e=0;e<Object.keys(this.filter).length;e++){const r=Object.keys(this.filter)[e];i.append(r,this.filter[r])}g.get("discovery/"+this.$route.params.dataSet+"/"+this.$route.params.csv+"_"+this.$route.params.level+"/"+this.technique.replace(/\s+/g,"").toLowerCase(),{params:i}).then(e=>{this.status=e.status,this.msg=e.data,console.log(e.data)}).catch(e=>{this.status=e.response.status,this.msg=e.response.data,console.error(e)})}},created(){this.get_events()}},me={class:"row g-5"},be=t("h3",{class:"display-4"},"Classification Algorithm",-1),fe={key:0,class:"col-md-12"},ge={key:1,class:"col-md-12"},ve={class:"d-grid col-4 mx-auto"},ke={key:0,class:"text-center"},ye=t("div",{class:"spinner-border m-8",role:"status"},[t("span",{class:"visually-hidden"},"Loading...")],-1),qe=[ye],Ce=["disabled"],Se={key:2,class:"col-md-12"},Le={class:"alert alert-danger",role:"alert"},Te={key:3,class:"col-md-12"},xe={class:"alert alert-success",role:"alert"},we=["src"];function Ee(i,e,r,h,s,c){const l=y("ValueSelection"),o=y("ClassificationTechniques");return a(),n("form",me,[be,Object.keys(this.events).length>0?(a(),n("div",fe,[q(l,{labels:s.labels,onFilter:c.update_filter},null,8,["labels","onFilter"])])):_("",!0),Object.keys(this.events).length>0?(a(),n("div",ge,[q(o,{labels:s.labels,onTechnique:c.update_technique},null,8,["labels","onTechnique"])])):_("",!0),t("div",ve,[this.status==1?(a(),n("div",ke,qe)):(a(),n("button",{key:1,type:"button",class:"btn btn-primary btn-lg",onClick:e[0]||(e[0]=(...u)=>c.apply&&c.apply(...u)),disabled:!s.inputSamples||s.inputSamples.length==0||s.applied[0]==s.technique&&s.applied[1]==s.classLabel&&s.applied[2]==s.inputSamples&&s.applied[3]==s.filter&&s.applied[4]==s.encoder}," Apply "+d(s.technique)+" Algorithm ",9,Ce))]),this.status==405?(a(),n("div",Se,[t("div",Le,d(s.msg),1)])):this.status==200?(a(),n("div",Te,[t("div",xe,d(s.msg),1),t("img",{src:"http://localhost:5000/decisiontree/"+this.$route.params.dataSet+"/"+this.$route.params.csv+"_"+this.$route.params.level+"?cache="+this.cacheKey,class:"img-fluid"},null,8,we)])):_("",!0)])}var Ue=v(_e,[["render",Ee]]);export{Ue as default};
